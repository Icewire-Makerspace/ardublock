<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">
<!-- This describes every BlockGenus, BlockDrawer, BlockFamilies in Starlogo-TNG. 
	Note: For BlockGenus, if genus A relies on another genus B, that genus B 
	must be specified in the xml file before genus A is specified./ We impose 
	this requirement so that sanity checks can be made regarding the validity 
	of a default argument when the BlockGenuses are first loaded. -->
<BlockLangDef>

	<BlockConnectorShapes>
		<BlockConnectorShape shape-type="number"
			shape-number="1" />
		<BlockConnectorShape shape-type="number-list"
			shape-number="2" />
		<BlockConnectorShape shape-type="number-inv"
			shape-number="3" />
		<BlockConnectorShape shape-type="boolean"
			shape-number="4" />
		<BlockConnectorShape shape-type="boolean-list"
			shape-number="5" />
		<BlockConnectorShape shape-type="boolean-inv"
			shape-number="6" />
		<BlockConnectorShape shape-type="string"
			shape-number="7" />
		<BlockConnectorShape shape-type="string-list"
			shape-number="8" />
		<BlockConnectorShape shape-type="string-inv"
			shape-number="9" />
		<BlockConnectorShape shape-type="poly"
			shape-number="10" />
		<BlockConnectorShape shape-type="poly-list"
			shape-number="11" />
		<BlockConnectorShape shape-type="poly-inv"
			shape-number="12" />
		<BlockConnectorShape shape-type="proc-param"
			shape-number="13" />
		<BlockConnectorShape shape-type="cmd"
			shape-number="14" />
	</BlockConnectorShapes>

	<BlockGenuses>
		<!-- Number -->

		<BlockGenus name="number" kind="data" color="208 10 16"
			initlabel="bg.number" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="digital-high" kind="data" color="208 10 16"
			initlabel="bg.digital-high">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-low" kind="data" color="208 10 16"
			initlabel="bg.digital-low">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="digital-on" kind="data" color="208 10 16"
			initlabel="bg.digital-on">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="digital-off" kind="data" color="208 10 16"
			initlabel="bg.digital-off">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="true" kind="data" initlabel="bg.true"
			color="208 10 16">
			<description></description>
			<description><text>Boolean true</text></description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="false" kind="data" initlabel="bg.false"
			color="208 10 16">
			<description></description>
			<description><text>Boolean false</text></description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="message" kind="data" color="0 0 255"
			initlabel="bg.message" editable-label="yes">
			<description></description>
			<description><text>Message for Serial println</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="string"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="glue_sn" kind="data" color="127 127 127"
			initlabel="bg.glue_sn">
			<description></description>
			<description><text>Glue number to Serial println</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="glue_sb" kind="data" color="127 127 127"
			initlabel="bg.glue_sb">
			<description></description>
			<description><text>Glue boolean/digital to Serial println</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<!-- Basic -->

		<BlockGenus name="loop" kind="command" color="255 221 0"
			initlabel="bg.loop" is-starter="yes" is-terminator="yes"
			label-unique="yes">
			<description></description>
			<description><text>This is the main loop of the Arduino</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket"
					label="bc.do" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="setup" kind="command" color="255 221 0"
			initlabel="bg.setup" is-starter="yes" is-terminator="yes"
			label-unique="yes">
			<description></description>
			<description><text>Do each block in here once before the loop starts</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket"
					label="bc.once" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="pin-read-digital" kind="data" color="77 191 169"
			initlabel="bg.pin-read-digital">
			<description></description>
			<description><text>Read digital value from a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="pin-read-analog" kind="data" color="77 191 169"
			initlabel="bg.pin-read-analog">
			<description></description>
			<description><text>Read analog value from a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="pin-write-digital" kind="command" color="77 191 169"
			initlabel="bg.pin-write-digital">
			<description></description>
			<description><text>Write digital value to a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="socket">
					<DefaultArg genus-name="digital-high" label="HIGH" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="pin-write-analog" kind="command" color="77 191 169"
			initlabel="bg.pin-write-analog">
			<description></description>
			<description><text>Write analog value to a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="setter_variable_number" kind="command"
			color="255 0 0" initlabel="bg.setter_variable_number">
			<description></description>
			<description><text>Set a number variable</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_number" label="variable name" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="variable_number" kind="data"
			initlabel="bg.variable_number" editable-label="yes" is-label-value="yes"
			color="255 0 255">
			<description></description>
			<description><text>Read a number variable</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="setter_variable_digital" kind="command"
			color="255 0 0" initlabel="bg.setter_variable_digital">
			<description></description>
			<description><text>Set a digital variable</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_digital" label="variable name" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="digital-high" label="HIGH" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="variable_digital" kind="data"
			initlabel="bg.variable_digital" editable-label="yes" is-label-value="yes"
			color="255 0 255">
			<description></description>
			<description><text>Read a digital variable</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="servo" kind="command" color="77 191 169"
			initlabel="bg.servo">
			<description></description>
			<description><text>Control a servo motor with a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.angle">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="tone" kind="command" color="77 191 169"
			initlabel="tone">
			<description></description>
			<description><text>Generate a tone of the specified frequency on a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.frequency">
					<DefaultArg genus-name="number" label="440" />
				</BlockConnector>

			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="tone_time" kind="command" color="77 191 169"
			initlabel="tone">
			<description></description>
			<description><text>Generate a tone of the specified frequency and time on a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.frequency">
					<DefaultArg genus-name="number" label="440" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.milliseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="no_tone" kind="command" color="77 191 169"
			initlabel="noTone">
			<description></description>
			<description><text>Stop a tone on a pin</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>



		<BlockGenus name="if" kind="command" initlabel="bg.if"
			color="255 221 0">
			<description></description>
			<description>
				<text>If the test condition is true, do the blocks in 'then'</text>
				<arg-description n="1" name="test">
					The condition being tested
				</arg-description>
				<arg-description n="2" name="then">
					The set of instructions that is done when the condition is true
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="ifelse" kind="command" initlabel="bg.ifelse"
			color="255 221 0">
			<description></description>
			<description>
				<text>Do the blocks in 'then' if the test condition is true, otherwise do the blocks in 'else'</text>
				<arg-description n="1" name="test">
					The condition being tested
				</arg-description>

				<arg-description n="2" name="then">
					The set of instructions that is done when the condition is true
				</arg-description>

				<arg-description n="3" name="else">
					The set of instructions that is done when the condition is false
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket"
					connector-type="cmd" />
				<BlockConnector label="bc.else" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="while" kind="command" initlabel="bg.while"
			color="255 221 0">
			<description></description>
			<description><text>Do these blocks while the test condition is true</text></description>
			<BlockConnectors>
				<BlockConnector label="bc.condition" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="repeat_times" kind="command" color="255 221 0"
			initlabel="bg.repeat_times">
			<description></description>
			<description><text>Repeat these blocks a number of times</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="subroutine" kind="command" color="177 10 255" initlabel="bg.subroutine" is-starter="yes" is-terminator="yes"
			label-unique="yes" editable-label="yes">
			<description></description>
		    <description><text>Create a subroutine of blocks</text></description>
		    <BlockConnectors>
		        <BlockConnector connector-type="cmd" connector-kind="socket" />
		    </BlockConnectors>
		</BlockGenus>
		
		<BlockGenus name="subroutine-ref" kind="command" color="177 10 255" initlabel="bg.subroutine" editable-label="yes">
		    <description></description>
		    <description><text>Use a subroutine</text></description>
		</BlockGenus>

		<!-- operator -->

		<BlockGenus name="and" kind="data" initlabel="bg.and"
			color="149 193 31">
			<description></description>
			<description><text>Report true if both of the two conditions are true</text></description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="or" kind="function" initlabel="bg.or"
			color="149 193 31">
			<description></description>
			<description><text>Report true if at least one of the two conditions are true</text></description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="not" kind="function" initlabel="bg.not"
			color="149 193 31">
			<description></description>
			<description><text>Report the opposite of a boolean/digital</text></description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>


		<!-- Math -->

		<BlockGenus name="addition" kind="function" initlabel="bg.addition"
			color="149 193 31">
			<description></description>
			<description><text>Report the sum of two numbers</text></description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="subtraction" kind="function" initlabel="bg.subtraction"
			color="149 193 31">
			<description></description>
			<description><text>Report the difference of two numbers</text></description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="multiplication" kind="function"
			initlabel="bg.multiplication" color="149 193 31">
			<description></description>
			<description><text>Report the product of two numbers</text></description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="division" kind="function" initlabel="bg.division"
			color="149 193 31">
			<description></description>
			<description><text>Report the quotient of two numbers</text></description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="modulo" kind="function" color="149 193 31"
			initlabel="bg.modulo">
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="min" kind="function" color="149 193 31"
			initlabel="bg.min">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="max" kind="function" color="149 193 31"
			initlabel="bg.max">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="greater" kind="function" color="149 193 31"
			initlabel="bg.greater">
			<description></description>
			<description><text>Is the first number greater than the second number?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="less" kind="function" color="149 193 31"
			initlabel="bg.less">
			<description></description>
			<description><text>Is the first number less than the second number?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="equal" kind="function" color="149 193 31"
			initlabel="bg.equal">
			<description></description>
			<description><text>Are the two numbers equal?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="greater_equal" kind="function" color="149 193 31"
			initlabel="bg.greater_equal">
			<description></description>
			<description><text>Is the first number greater than or equal to the second number?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="less_equal" kind="function" color="149 193 31"
			initlabel="bg.less_equal">
			<description></description>
			<description><text>Is the first number less than or equal to the second number?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="not_equal" kind="function" color="149 193 31"
			initlabel="bg.not_equal">
			<description></description>
			<description><text>Are the two numbers not equal?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="abs" kind="function" color="149 193 31"
			initlabel="bg.abs">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="pow" kind="function" color="149 193 31"
			initlabel="bg.pow">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.base" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.exponent" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="sqrt" kind="function" color="149 193 31"
			initlabel="bg.sqrt">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="sin" kind="function" color="149 193 31"
			initlabel="bg.sin">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="cos" kind="function" color="149 193 31"
			initlabel="bg.cos">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="tan" kind="function" color="149 193 31"
			initlabel="bg.tan">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>




		<!-- Utility -->
		<BlockGenus name="delay" kind="command" color="142 160 210"
			initlabel="bg.delay">
			<description></description>
			<description><text>Pause the program for a certain amount of time in milliseconds</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.milliseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="delay_microseconds" kind="command" color="142 160 210"
			initlabel="bg.delay_microseconds">
			<description></description>
			<description><text>Pause the program for a certain amount of time in microseconds</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.microseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="random" kind="data" color="142 160 210"
			initlabel="bg.random">
			<description></description>
			<description><text>Generate a random number from a minimum number (inclusive) to a maximum number (exclusive)</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.min">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.max">
					<DefaultArg genus-name="number" label="1024" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="millis" kind="data" color="142 160 210"
			initlabel="bg.millis">
			<description></description>
			<description><text>The number of milliseconds since the Arduino board began running the current program</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="serial_println" kind="command" color="142 160 210"
			initlabel="bg.serial_println">
			<description></description>
			<description><text>Send data to the serial port</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="socket">
					<DefaultArg genus-name="message" label="message" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="map_common" kind="data" color="142 160 210"
			initlabel="bg.map_common">
			<description></description>
			<description><text>Re-map a number from [0, 1023] to [0, 255]</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="map" kind="data" color="142 160 210"
			initlabel="bg.map">
			<description></description>
			<description><text>Re-map a number from one range to another</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.from">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="1023" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.to">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="wire_read" kind="data" color="142 160 210"
			initlabel="bg.wire_read">
			<description></description>
			<description><text>Read data from I2C</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.device_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.register_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="wire_write" kind="command" color="142 160 210"
			initlabel="bg.wire_write">
			<description></description>
			<description><text>Write data to I2C</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.device_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.register_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="wire_isread" kind="data" color="142 160 210"
			initlabel="bg.wire_isread">
			<description></description>
			<description><text>Is last read from I2C a success?</text></description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>



		<!-- Zumo Robot -->
		<BlockGenus name="zumo_find_line" kind="command" color="10 10 10"
			initlabel="bg.zumo_find_line">
			<description></description>
			<description><text>Calibrate the reflectance sensors to find a line</text></description>
		</BlockGenus>


	</BlockGenuses>

	<BlockFamilies>
		<BlockFamily>
			<FamilyMember>digital-high</FamilyMember>
			<FamilyMember>digital-low</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>and</FamilyMember>
			<FamilyMember>or</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>true</FamilyMember>
			<FamilyMember>false</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>addition</FamilyMember>
			<FamilyMember>subtraction</FamilyMember>
			<FamilyMember>multiplication</FamilyMember>
			<FamilyMember>division</FamilyMember>
			<FamilyMember>modulo</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>min</FamilyMember>
			<FamilyMember>max</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>greater</FamilyMember>
			<FamilyMember>less</FamilyMember>
			<FamilyMember>equal</FamilyMember>
			<FamilyMember>greater_equal</FamilyMember>
			<FamilyMember>less_equal</FamilyMember>
			<FamilyMember>not_equal</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>sin</FamilyMember>
			<FamilyMember>cos</FamilyMember>
			<FamilyMember>tan</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>digital-on</FamilyMember>
			<FamilyMember>digital-off</FamilyMember>
		</BlockFamily>
	</BlockFamilies>

	<BlockDrawerSets>
		<BlockDrawerSet name="factory" type="stack" location="southwest"
			window-per-drawer="no" drawer-draggable="no">
			<BlockDrawer name="bd.control" type="factory" is-open="yes"
				button-color="252 203 125">
				<BlockGenusMember>loop</BlockGenusMember>
				<BlockGenusMember>setup</BlockGenusMember>
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>while</BlockGenusMember>
				<BlockGenusMember>repeat_times</BlockGenusMember>
				<BlockGenusMember>subroutine</BlockGenusMember>
				<BlockGenusMember>subroutine-ref</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer button-color="29 152 155" name="bd.pins"
				type="factory">
				<BlockGenusMember>pin-read-digital</BlockGenusMember>
				<BlockGenusMember>pin-read-analog</BlockGenusMember>
				<BlockGenusMember>pin-write-digital</BlockGenusMember>
				<BlockGenusMember>pin-write-analog</BlockGenusMember>
				<BlockGenusMember>servo</BlockGenusMember>
				<BlockGenusMember>tone</BlockGenusMember>
				<BlockGenusMember>tone_time</BlockGenusMember>
				<BlockGenusMember>no_tone</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer button-color="182 85 52" name="bd.number"
				type="factory">
				<BlockGenusMember>number</BlockGenusMember>
				<BlockGenusMember>digital-high</BlockGenusMember>
				<BlockGenusMember>digital-low</BlockGenusMember>
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
				<BlockGenusMember>variable_number</BlockGenusMember>
				<BlockGenusMember>variable_digital</BlockGenusMember>
				<BlockGenusMember>setter_variable_number</BlockGenusMember>
				<BlockGenusMember>setter_variable_digital</BlockGenusMember>
			</BlockDrawer>

			<BlockDrawer button-color="114 147 71" name="bd.operators"
				type="factory">
				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>not</BlockGenusMember>

				<BlockGenusMember>addition</BlockGenusMember>
				<BlockGenusMember>subtraction</BlockGenusMember>
				<BlockGenusMember>multiplication</BlockGenusMember>
				<BlockGenusMember>division</BlockGenusMember>
				<BlockGenusMember>modulo</BlockGenusMember>
				<BlockGenusMember>min</BlockGenusMember>
				<BlockGenusMember>max</BlockGenusMember>

				<BlockGenusMember>greater</BlockGenusMember>
				<BlockGenusMember>less</BlockGenusMember>
				<BlockGenusMember>equal</BlockGenusMember>
				<BlockGenusMember>greater_equal</BlockGenusMember>
				<BlockGenusMember>less_equal</BlockGenusMember>
				<BlockGenusMember>not_equal</BlockGenusMember>

				<BlockGenusMember>abs</BlockGenusMember>
				<BlockGenusMember>pow</BlockGenusMember>
				<BlockGenusMember>sqrt</BlockGenusMember>
				<BlockGenusMember>sin</BlockGenusMember>
				<BlockGenusMember>cos</BlockGenusMember>
				<BlockGenusMember>tan</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="95 120 132" name="bd.utilities"
				type="factory">
				<BlockGenusMember>delay</BlockGenusMember>
				<BlockGenusMember>random</BlockGenusMember>
				<BlockGenusMember>serial_println</BlockGenusMember>
				<BlockGenusMember>message</BlockGenusMember>
				<BlockGenusMember>glue_sn</BlockGenusMember>
				<BlockGenusMember>glue_sb</BlockGenusMember>
				<BlockGenusMember>map_common</BlockGenusMember>
				<BlockGenusMember>map</BlockGenusMember>
				<BlockGenusMember>delay_microseconds</BlockGenusMember>
				<BlockGenusMember>millis</BlockGenusMember>
				<BlockGenusMember>wire_write</BlockGenusMember>
				<BlockGenusMember>wire_read</BlockGenusMember>
				<BlockGenusMember>wire_isread</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="0 0 0" name="bd.zumo_robot"
				type="factory">
				<BlockGenusMember>zumo_find_line</BlockGenusMember>
			</BlockDrawer>


	
			<!-- Shapes are automatically loaded as blocks in the Shapes drawer (see 
				slcodeblocks.ShapeBlocksGenerator for details) -->
			<!-- Sound blocks reside in the auto-generated String drawer. (see slcodeblocks.SoundBlocksGenerator 
				for details) -->
		</BlockDrawerSet>
	</BlockDrawerSets>

	<Pages drawer-with-page="yes">
		<Page page-name="ArduBlock" page-width="400" />
		<!-- <Page page-name="Everyone" page-width="400"></Page> <Page page-name="Setup" 
			page-width="400"></Page> <Page page-name="Runtime" page-width="400"></Page> -->
	</Pages>

	<TrashCan>
		<OpenTrashImage>com/ardublock/block/trash_open.png</OpenTrashImage>
		<ClosedTrashImage>com/ardublock/block/trash.png</ClosedTrashImage>
	</TrashCan>

</BlockLangDef>
